const invoicesList=document.querySelector(".invoices"),rightBox=document.querySelector(".right-block"),formCreateBtn=document.querySelector(".btn--create"),fetchAllClient=async()=>{const i=await fetch("http://localhost:3000/api/clients"),t=await i.json();return await t},fetchAllInvoices=async()=>{const i=await fetch("http://localhost:3000/api/invoices"),t=await i.json();return await t},fetchSingleInvoice=async i=>{const t=await fetch(`http://localhost:3000/api/invoices/${i}`),e=await t.json();return await e},removeIncoive=async i=>{const t=await fetch(`http://localhost:3000/api/invoices/${i}`,{method:"DELETE",headers:{"Content-Type":"application/json"}}),e=await t.json();return await e},editInvoice=async(i,t)=>{const e=await fetch(`http://localhost:3000/api/invoices/${i}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({paid:t})}),n=await e.json();return await n},displayInvoiceList=async()=>{invoicesList.innerHTML="";const i=await fetchAllInvoices();let t="";i.forEach((i=>{t+=`\n            <div class="invoice-item" data-id=${i.id}>\n                <div class="invoice-item__id">${i.number}</div>\n                <div class="invoice-item__client">${i.client.name}</div>\n                <div class="invoice-item__amount">${i.amount}‚Ç¨</div>\n                <div class="invoice__status invoice__status--${i.paid?"paid":"pending"}">${i.paid?"Pay√©e":"En attente"}</div>\n            </div>\n        `,invoicesList.innerHTML=t}))},createInvoice=async i=>{const t=await fetch("http://localhost:3000/api/invoices",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)}),e=await t.json();return console.log(e),await e},displayInvoiceDetails=async i=>{rightBox.innerHTML="";const t=await fetchSingleInvoice(i);let e=`\n    <div class="invoice">\n        <div class="invoice__actions">\n            <div class="status">\n                <div class="invoice__subtitle">Statut</div>\n                <div class="invoice__status invoice__status--${t.paid?"paid":"pending"}">${t.paid?"Pay√©e":"En attente"}</div>\n            </div>\n            <div class="actions">\n                <button class="btn btn--red btn--delete" data-id=${t.id}>Supprimer</button>\n                <button class="btn btn--purple btn--edit" data-id=${t.id} data-paid=${t.paid}>Indiqu√©e ${t.paid?"en attente":"pay√©e"}</button>\n            </div>\n        </div>\n        <div class="wrapper">\n            <div class="invoice__header">\n                <div class="text-30-b">${t.number}</div>\n                <div class="invoice__title">${t.title}</div>\n            </div>\n            <div class="invoice__infos">\n                <div class="invoice__infos--client">\n                    <div class="invoice__subtitle">Client</div>\n                    <div class="invoice__client bold">${t.client.name}</div>\n                    <div class="invoice__email bold">${t.client.email}</div>\n                </div>\n                <div class="invoice__dates">\n                    <div>\n                        <div class="invoice__subtitle">Date de la facture</div>\n                        <div class="invoice__date bold">${t.createdAt}</div>\n                    </div>\n                    <div>\n                        <div class="invoice__subtitle">Date de paiement</div>\n                        <div class="invoice__date bold">${t.dueDate}</div>\n                    </div>\n                </div>\n            </div>\n            <div class="invoice__footer">\n                <div class="invoice__text">Total √† payer</div>\n                <div class="invoice__text">${t.amount}‚Ç¨</div>\n            </div>\n        </div>\n    </div>\n    `;rightBox.innerHTML=e},showAddForm=async()=>{const i=await fetchAllClient();rightBox.innerHTML="";let t='\n    <div class="wrapper">\n        <h2>Nouvelle facture</h2>\n        <form class="form" method="POST">\n            <div class="form__group">\n                <label for="" class="form__label">Num√©ro de la facture</label>\n                <input type="text" class="form__input" name="number">\n            </div>\n            <div class="form__group">\n                <label for="" class="form__label">Client</label>\n                <select name="client" id="">\n        ';i.forEach((i=>{t+=`<option value="${i.id}">${i.name}</option>`})),t+='\n                </select>\n            </div>\n            <div class="form__group">\n                <label for="" class="form__label">Titre de la facture</label>\n                <input type="text" class="form__input" name="title">\n            </div>\n            <div class="form__group">\n                <label for="" class="form__label">Montant</label>\n                <input type="text" class="form__input" name="amount">\n            </div>\n            <div class="form__group">\n                <label for="" class="form__label">Date de paiement</label>\n                <input type="date" class="form__input" name="dueDate">\n            </div>\n            <button class="btn btn--purple" type="submit" name="submitBtn">Enregistrer</button>\n        </form>\n    </div>\n    ',rightBox.innerHTML=t};invoicesList.addEventListener("click",(async function(i){const t=i.target.closest(".invoice-item");if(!t)return;console.log(t);const e=t.dataset.id;await displayInvoiceDetails(e)})),rightBox.addEventListener("click",(async function(i){const t=i.target.closest(".btn--delete"),e=i.target.closest(".btn--edit"),n=i.target.closest(".form");let a=null,s="";if(t||e){if(a=i.target.dataset.id,t&&(s=await removeIncoive(a)),e){const i="true"==e.dataset.paid;console.log(i),s=await editInvoice(a,!i),await displayInvoiceDetails(a)}await displayInvoiceList()}if(!n||!i.target.matches(".form button[name='submitBtn']"))return;i.preventDefault();const{number:o,client:c,title:l,amount:d,dueDate:v}=n.elements;if(!(o&&c&&l&&d&&v))return void console.error("üö® Erreur : Un ou plusieurs champs sont introuvables !");const r={number:o.value,clientId:c.value,title:l.value,amount:d.value,dueDate:v.value};await createInvoice(r),await displayInvoiceList()})),formCreateBtn.addEventListener("click",(async function(){await showAddForm()})),document.addEventListener("DOMContentLoaded",(()=>{displayInvoiceList()}));